package minimize_malware_spread;

import helper.BasicFunctions;

public class Runner {
    public static void main(String[] args) {
        int[][] graph = {
                { 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1 },
                { 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 },
                { 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0 },
                { 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
                { 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0 },
                { 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0 },
                { 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0 },
                { 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0 },
                { 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0 },
                { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 }
        };
        BasicFunctions.print(new Solution().minMalwareSpread(graph, new int[] { 7, 8, 6, 2, 3 }));

        int[][] graph2 = {
                { 1, 1, 0 },
                { 1, 1, 0 },
                { 0, 0, 1 }
        };
        BasicFunctions.print(new Solution2().minMalwareSpread(graph2, new int[] { 0, 1, 2 }));
    }
}
